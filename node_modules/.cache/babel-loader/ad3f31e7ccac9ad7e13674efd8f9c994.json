{"ast":null,"code":"import _slicedToArray from \"/home/peppa/React/REACT-RepoExample\\n/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/peppa/React/REACT-RepoExample\\n/frontend/src/pages/Dashboard/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport apigit from '../../services/apigit';\nimport './styles.css';\nexport default function Dashboard() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        repos = _useState2[0],\n        setRepos = _useState2[1];\n\n  useEffect(() => {\n    async function loadRepo() {\n      const user = localStorage.getItem('user');\n      const response = await apigit.get('' + user + '/repos', {});\n      const data = response.data;\n      setRepos(data);\n    }\n\n    loadRepo();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    className: \"repos-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, repos.map(repos => React.createElement(\"li\", {\n    key: repos.id,\n    classname: \"repos-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    style: {\n      backgroundImage: `url(${repos.owner.avatar_url})`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, repos.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Linguagem: \", repos.language), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"URL Http: \", repos.git_url), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, repos.description)))));\n}","map":{"version":3,"sources":["/home/peppa/React/REACT-RepoExample\n/frontend/src/pages/Dashboard/index.js"],"names":["React","useEffect","useState","apigit","Dashboard","repos","setRepos","loadRepo","user","localStorage","getItem","response","get","data","map","id","backgroundImage","owner","avatar_url","name","language","git_url","description"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAO,cAAP;AAEA,eAAe,SAASC,SAAT,GAAoB;AAAA,oBACNF,QAAQ,CAAC,EAAD,CADF;AAAA;AAAA,QACzBG,KADyB;AAAA,QAClBC,QADkB;;AAGhCL,EAAAA,SAAS,CAAC,MAAK;AACZ,mBAAeM,QAAf,GAAyB;AACtB,YAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AACA,YAAMC,QAAQ,GAAG,MAAMR,MAAM,CAACS,GAAP,CAAW,KAAGJ,IAAH,GAAQ,QAAnB,EAA4B,EAA5B,CAAvB;AACA,YAAMK,IAAI,GAAGF,QAAQ,CAACE,IAAtB;AACAP,MAAAA,QAAQ,CAACO,IAAD,CAAR;AACF;;AACDN,IAAAA,QAAQ;AAEV,GATQ,EASP,EATO,CAAT;AAYA,SACG,0CACG;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIF,KAAK,CAACS,GAAN,CAAUT,KAAK,IACb;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACU,EAAf;AAAmB,IAAA,SAAS,EAAC,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAQ,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAG,OAAMX,KAAK,CAACY,KAAN,CAAYC,UAAW;AAAjD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASb,KAAK,CAACc,IAAf,CAFH,EAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAed,KAAK,CAACe,QAArB,CAHH,EAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcf,KAAK,CAACgB,OAApB,CAJH,EAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIhB,KAAK,CAACiB,WAAV,CALH,CADF,CADJ,CADH,CADH;AAiBF","sourcesContent":["import React, {useEffect,useState} from 'react';\nimport apigit from '../../services/apigit';\nimport './styles.css' \n\nexport default function Dashboard(){\n   const [repos, setRepos] = useState([])\n   \n   useEffect(()=> {\n      async function loadRepo(){\n         const user = localStorage.getItem('user');\n         const response = await apigit.get(''+user+'/repos',{});\n         const data = response.data;\n         setRepos(data);\n      }\n      loadRepo();\n      \n   },[]);\n\n  \n   return (\n      <>\n         <ul className=\"repos-list\">\n            {repos.map(repos =>(\n               <li key={repos.id} classname=\"repos-item\">\n                  <header style={{ backgroundImage: `url(${repos.owner.avatar_url})`}}></header>\n                  <strong>{repos.name}</strong>\n                  <p>Linguagem: {repos.language}</p>\n                  <p>URL Http: {repos.git_url}</p>\n                  <p>{repos.description}</p>\n                  \n               </li>\n            ))}\n\n         </ul>\n      </>\n   )\n}"]},"metadata":{},"sourceType":"module"}