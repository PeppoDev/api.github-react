{"ast":null,"code":"import _slicedToArray from \"/home/peppa/React/REACT-RepoExample\\n/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/peppa/React/REACT-RepoExample\\n/frontend/src/pages/Dashboard/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport apigit from '../../services/apigit';\nexport default function Dashboard() {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        repos = _useState2[0],\n        setRepos = _useState2[1];\n\n  useEffect(() => {\n    async function loadRepo() {\n      const user = localStorage.getItem('user');\n      const response = await apigit.get('' + user + '/repos', {});\n      const data = response.data;\n    }\n\n    loadRepo();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/peppa/React/REACT-RepoExample\n/frontend/src/pages/Dashboard/index.js"],"names":["React","useEffect","useState","apigit","Dashboard","repos","setRepos","loadRepo","user","localStorage","getItem","response","get","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,eAAe,SAASC,SAAT,GAAoB;AAAA,oBACNF,QAAQ,EADF;AAAA;AAAA,QACzBG,KADyB;AAAA,QAClBC,QADkB;;AAGhCL,EAAAA,SAAS,CAAC,MAAK;AACZ,mBAAeM,QAAf,GAAyB;AACtB,YAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AACA,YAAMC,QAAQ,GAAG,MAAMR,MAAM,CAACS,GAAP,CAAW,KAAGJ,IAAH,GAAQ,QAAnB,EAA4B,EAA5B,CAAvB;AACA,YAAMK,IAAI,GAAGF,QAAQ,CAACE,IAAtB;AACF;;AACDN,IAAAA,QAAQ;AACV,GAPQ,EAOP,EAPO,CAAT;AAUA,SACG,0CACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADH;AAOF","sourcesContent":["import React, {useEffect,useState} from 'react';\nimport apigit from '../../services/apigit';\n\nexport default function Dashboard(){\n   const [repos, setRepos] = useState()\n   \n   useEffect(()=> {\n      async function loadRepo(){\n         const user = localStorage.getItem('user');\n         const response = await apigit.get(''+user+'/repos',{});\n         const data = response.data;\n      }\n      loadRepo();\n   },[]);\n\n  \n   return (\n      <>\n         <ul>\n\n         </ul>\n      </>\n   )\n}"]},"metadata":{},"sourceType":"module"}